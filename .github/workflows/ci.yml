name: CI and Release

permissions:
  contents: write   # âœ… Enables release creation and tag push
  actions: read
  checks: read

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake libgtk-3-dev clang-format
        
    - name: Create build directory
      run: mkdir -p build
      
    - name: Configure with CMake
      run: |
        cd build
        cmake ..
        
    - name: Build the project
      run: |
        cd build
        make
        
    - name: Check for build errors
      run: |
        if [ $? -ne 0 ]; then
          echo "Build failed!"
          exit 1
        else
          echo "Build successful!"
        fi
        
    - name: Run basic code analysis
      run: |
        # Perform basic checks for common issues
        if grep -r "TODO\|FIXME" src/; then
          echo "Found TODO/FIXME markers in the code"
          exit 1
        else
          echo "No TODO/FIXME markers found"
        fi
        
        # Check for uninitialized variables (basic check)
        if grep -r " = malloc\| = calloc" src/ | grep -v " = NULL"; then
          echo "Found possible uninitialized pointers"
        else
          echo "No obvious uninitialized pointers found"
        fi
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: waykey-binary
        path: build/waykey

  release:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: waykey-binary
        path: build/waykey/
        
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        draft: false
        prerelease: false
        body: |
          Automated release from CI
          
          - Commit: ${{ github.sha }}
          - Build: ${{ github.run_number }}
